** Features

*** New command for manipulating torrent labels

*** New command for opening Dired from the files context

* Changes in 0.12

** Features

*** New custom variables `transmission-add-history-variable' and
`transmission-tracker-history-variable' for storing history of
torrents added and tracker announce URLs input.  The defaults are
`transmission-add-history' and `transmission-tracker-history',
respectively.

** Changes

*** `transmission-turtle-mode' replaces `transmission-turtle-toggle'
The former mentioned is an actual minor mode which shows a lighter in
transmission buffers.

*** RPC request functions work differently now.
The "results" string is checked when HTTP status is checked and
signals an error if not "success", which is caught and messaged.

Only the "arguments" object is parsed, if possible.  The return from
`transmission-request' is now the decoded arguments object, and the
argument to `transmission-request-async''s callback is the same object
instead of the HTTP response content.

* Changes in 0.11

** Features

*** Dired-like marks for torrents and their contents.
For items such as torrents or files within torrents, actions which
either acted on point and the items on region can now be applied on
marked items.  Marks take precedence, followed by the region, then the
item at point.

**** New commands for manipulating marks: `transmission-toggle-mark',
`transmission-unmark-all', and `transmission-invert-marks' bound to
the corresponding keys as in Dired.

*** Added commands for viewing or displaying torrent files
corresponding to various dired commands.  These include
`transmission-find-file-other-window', `transmission-display-file',
and `transmission-view-file', bound to the corresponding keys as in
Dired.

*** New command `transmission-turtle-status' to show the state of
turtle mode.

** Changes

*** `transmission-turtle-set-days' now disables the schedule with a
prefix argument instead of when empty input is given.  This
facilitates independently changing the days and whether the schedule
is enabled.

*** Many interactive functions now have signatures.
These commands now somewhat reflect the Transmission API, making them
more useful from Lisp.

*** Bindings for adding and removing trackers in the info context have
changed to "a" and "r", respectively.

*** `transmission-move' is no longer bound to a key.

*** Network connections are kept alive and reused.

* Changes in 0.10

** Features

*** New commands for controlling turtle mode, or "alt-speed" mode.

**** `transmission-turtle-toggle' for toggling whether the limits are
active.

**** `transmission-turtle-set-days' and
`transmission-turtle-set-times' for indicating the days of the week
and time of day when the limits should be automatically enabled,
respectively.

**** `transmission-turtle-set-speeds' to set the alternative speed
limits.

*** Executing a command on a file now uses MIME (mailcap) to guess
possible default commands.  These can be navigated with M-n in the
`transmission-files-command' prompt.

*** New command `transmission-free' to report free disk space

*** New command `transmission-stats' to report session statistics

*** Torrent specific limits are shown in info context.
Specifically, ratio, download rate, and upload rate information.

*** RPC authorization can be discovered via auth-source.
`transmission-rpc-auth' is now like an `auth-source-search' spec, so
passwords can be stored outside of `transmission-rpc-auth'.

*** GeoIP associations can be cached.
Unless `transmission-geoip-function' already has a built-in cache,
using cache lookups can be much more efficient.  This can be
enabled with the option `transmission-geoip-use-cache'.

** Changes

*** Torrent-specific limit commands are bound to d,l,u in info context.

*** Verify command now guarded with y-or-n prompt.
Accidentally invoking this on a large torrent is a waste.

*** Wanted field in info context now uses "sizeWhenDone".
Parsing the file data in order to compute actual wanted byte count
gets expensive with more files in a torrent, as Emacs' json parsing is
slow.  Further, it isn't necessarily a useful measurement, as
Transmission downloads the pieces containing wanted bytes, a superset
of what was being computed before.

*** Some commands that operate on a region now deactivate the mark.
These include the move, reannounce, remove, start/stop, and verify
commands.

*** Automatic refreshing is inhibited if the buffer is narrowed.

** Fixes

*** Point, mark, and window start are better managed across refresh.
Before, if a particular buffer was being viewed in multiple windows,
this would confuse `transmission-refresh' and the state would be lost.
Now, the state is recorded and restored in each window showing a
buffer, resulting in much improved behavior.

* Changes in 0.9

** Features

*** New commands for setting torrent-specific limits.

**** `transmission-set-torrent-download' and
`transmission-set-torrent-upload' control torrent-specific speed
limits, while `transmission-toggle-limits' toggles whether a torrent
honors the global/session limits.

**** `transmission-set-torrent-ratio' controls the mode and threshold
for ratio.

*** New option `transmission-time-zone' for configuring timestamps

*** New column "Location" in the *peers* context for translating IPs.
The new option `transmission-geoip-function' is used to indicate which
function to use to get a location from an IP.  The function
`transmission-geoiplookup' is provided to call the geoiplookup(1)
utility.

*** `transmission-format-pieces-brief' upgrades to finer greyscale
in 256 color terminals and graphical frames.

*** Digit grouping delimiter is customizable.
Use `transmission-digit-delimiter' to control it. Defaults to comma.

** Changes

*** Pieces display customization has changed.
Custom variable `transmission-pieces-display' is replaced by
`transmission-pieces-function'.  This more easily permits extension of
pieces display.  For instance, using some other function to output
pieces as an image, or with a different color map.

*** Option `transmission-timer-interval' renamed to
`transmission-refresh-interval'

*** Option `transmission-timer-p' replaced by new option
`transmission-refresh-modes', a list of major modes in which to use a
timer to refresh the associated buffer.

*** Automatic refreshing is inhibited by isearch or an active region.

*** Works with absolute path requirements in Transmission 2.90+ 

* Changes in 0.8

** Features

*** New context with peer information.

*** New command for copying the current torrent's magnet link
into the kill ring.

*** `transmission-add' now has a conditional default argument.
The default argument is a guess of a valid torrent at point, either as
a URL, file name, magnet link, or info hash. The behavior can be
customized with the new variable `transmission-torrent-functions'.

*** New one-line pieces display.
Visible when new custom variable `transmission-pieces-display' is set
to 'brief.

** Changes

*** Global upload speed limit and seed ratio limit can be set to zero.

** Fixes

*** Trackers are no longer added in reverse order

* Changes in 0.7

** Features

*** Removing trackers can now (finally) be done by announce URL
in addition to removal by tracker ID.

*** Numbers in the *info* buffer now have comma separators

*** `transmission-request-async' has a new argument CALLBACK.

*** More information is shown for trackers.
This includes announce/scrape times and the error string for failed
announces.

*** More information is shown for peers.
Peers "interested" in receiving and with "unchoked" bandwidth are
shown. Additionally shown are numbers of peers coming from either DHT,
PEX, etc.

*** New custom variable `transmission-trackers'.
This is used to store trackers which are added to the completion
candidates when adding a tracker to a torrent.

*** New command `transmission-trackers-replace'

** Fixes

*** The file list header line updates correctly when units change.

* Changes in 0.6

** Features

*** Each major mode now has a menu

*** Torrent list conditionally shows âˆž in place of Inf for ETA

*** Adding trackers now has completion.
The collection of things to complete is a list of trackers from all
torrents known to transmission.

*** Applied some optimizations

**** Replaced some seq- functions with their (faster) cl- counterparts.
Ultimately dropped the dependency on seq.el

**** `transmission-draw-info' should be faster now

**** Set `line-move-visual' to nil in tabulated-list buffers

*** New function `transmission-request-async' for sending requests
without blocking to wait for a response.

* Changes in 0.5

** Features

*** Download directory can be specified when adding a torrent
by prefixing `transmission-add'

*** New command `transmission-move' for changing download directory

*** `tabulated-list-mode' is employed for torrent and file listing.
This adds some sorting facilities to these listings, as well as a
header line.

*** New command `transmission-find-file' for visiting from the file list

*** More information is shown in the info context

*** Pieces are only shown if the torrent is in progress.
A count of pieces obtained and a percentage are shown.

** Changes

*** Renamed some things

**** `transmission-file-size-units' renamed to `transmission-units'

** Fixes

*** transmission-quit is smarter now

*** More use is made of global and buffer-local variables
For instance, `transmission-torrent-id', `transmission-torrent-vector'

* Changes in 0.4.1

*** Display of pieces is now correct

*** `transmission-files-command' now tries incomplete .part files

*** Use 'font-lock-face instead of 'font property
Fontification goes missing sometimes otherwise

* Changes in 0.4

** Features

*** Switching buffers is way less annoying now
Point/mark is better preserved in buffers.  Opening the info and files
buffers simply refresh if they are the same one (torrent id) that was
drawn before.  The transmission-draw and transmission-refresh
functions now do what they're supposed to do.

*** Torrents can now be added by BitTorrent info hash

*** New commands for adding and removing trackers

*** Support for RPC username and password

*** More HTTP errors are caught
401 for bad RPC credentials, and a few others for an incorrect path
to the RPC

** Customization

*** Session address
The RPC path variable `transmission-path' is now named
`transmission-rpc-path'.

*** RPC authorization
New variable `transmission-rpc-auth' allows RPC username and password
to be configured.

** Bug fixes

*** transmission-prop-values-in-region does the right thing now

* Changes in 0.3

** Features

*** New commands for bandwidth priority, reannounce, global seed ratio
limit

*** Leading directory in files list is truncated if possible

*** Added more torrent information to *transmission-info* buffer.
Tracker URLs and tiers, along with peers, seeders, leechers, and
snatches from each are displayed.

Minimal peer information--numbers connected, seeding, leeching--is
displayed.

Torrent pieces are now displayed.  Needs fixing.

** Added a Makefile and README

** Bug fixes

*** Fixed issue with not being able to add .torrent files.

*** Fixed a divide-by-zero bug.

* Changes in 0.2

** Now compatible with stable Emacs 24.4

* Changes in 0.1

** Basic Transmission torrent client. "transmission.el" is an interface
to a Transmission session for GNU Emacs.

Entry points are the `transmission' and `transmission-add' commands.

A variety of commands are available for manipulating torrents.  Some
of them can be applied over multiple torrents simultaneously by
selecting them within a region.

*** Features a torrent list and two other contexts: one for the files
contained in a torrent, the other for detailed information about the
torrent.

One can start/stop, verify, and remove torrents, set global rate
limits, and set individual file priorities.

*** Customization

**** Session address
The variables `transmission-host', `transmission-service', and
`transmission-path' have the default of a local Transmission session.

**** Appearance
The variables `transmission-file-size-units' and
`transmission-time-format' control the appearance of
file-size/bitrates and dates, respectively.

**** Timer
The variables `transmission-timer-p' and `transmission-timer-interval'
control whether the torrent list updates automatically, and at what
period.


Local variables:
coding: utf-8
mode: outline
paragraph-separate: "[ 	]*$"
end:
